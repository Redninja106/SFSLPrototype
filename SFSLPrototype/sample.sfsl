// vs.sfsl

struct MyCustomStruct
{
	int myInt;
	float myFloat;
}

buffer<int> myBuffer; // value can be set using IShader.SetBuffer
MyCustomStruct myStruct; // value can be set using IShader.SetValue

[position]
out Vector3 position;

// vertex shader function (vertex passed as arg)
[vertexshader]
void ThisIsMyVertexShader(Vector3 vertex)
{
	position = vertex;
}

// ps.sfsl

texture myTexture;

[viewportposition]
in vector2 vpPosition;

[fragcolor]
out Vector4 outputColor;

[fragmentshader]
void ThisIsMyFragmentShader()
{
	mySampler.sample(myTex, .5f,.5f)

	myTexture[.5, .5];

	//outputColor = GetTheColorRed() * myTexture[vpPosition * .5f + (1, 1)];
}

vector4 GetTheColorRed()
{
	return vector4(1, 0, 0, 1); // rgba
}